@using BehzistiMaskan.Core.Utility
@model BehzistiMaskan.ViewModels.BankInfoViewModel
@{
    ViewBag.Title = "ویرایش اطلاعات - مسکن فعلی مددجو";
    Layout = "~/Views/Shared/_LayoutPorto.cshtml";
    ViewBag.SelectedTabMenu = "EditBankInfo";
    ViewBag.OnlyRequestExemption = Model.Client.OnlyRequestExemption;
    ViewBag.IsRequestAnyExemption = Model.Client.IsRequestAnyExemption;
}

@Html.Partial("_EditClientHeaderPartial")
<!-- start: page -->
<div class="row" id="page">
    <div class="col-md-12">
        <div class="tabs tabs-primary">
            @Html.Partial("_EditClientTabMenuPartial")

            <div class="tab-content">

                <div id="EditContactInfoTab" class="tab-pane active">
                    @using (Html.BeginForm("SaveBankInfo", "Client", FormMethod.Post, new { @class = "form form-bordered", @id = "clientBankInfoEditFrom" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(c => c.BankInfo.BankTypeId, new { @class = "control-label" })
                                    @Html.DropDownListFor(c => c.BankInfo.BankTypeId, new SelectList(Model.BankTypes, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(c => c.BankInfo.BankTypeId)
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(c => c.BankInfo.AccountNumber, new { @class = "control-label" })
                                    @Html.TextBoxFor(c => c.BankInfo.AccountNumber, new { @class = "form-control text-dir-ltr" })
                                    @Html.ValidationMessageFor(c => c.BankInfo.AccountNumber)
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(c => c.BankInfo.CardNumber, new { @class = "control-label" })
                                    @Html.TextBoxFor(c => c.BankInfo.CardNumber, new { @class = "form-control text-dir-ltr" })
                                    @Html.ValidationMessageFor(c => c.BankInfo.CardNumber)
                                </div>
                            </div>
                        </div>
                        <hr />
                        <h4 class="text-primary">فرم تاییدیه حساب بانکی</h4>
                        <hr />
                        <div class="alert alert-info">
                            کارشناس محترم! <br />
                            در این بخش می توانید فرم تاییدیه حساب بانکی مددجو را بارگذاری نمایید.
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <label> تصویر فرم تاییدیه حساب بانکی (بارگذاری شده)</label>
                                <hr />
                                

                                @if (Model.BankInfo?.AccountApproveImage != null)
                                {
                                    <div>
                                        <a class="example-image-link" href="@(Url.Action("GetClientBankApproveImage") + "/" + Model.BankInfo.Id)" data-lightbox="example-1">
                                        <img id="imgApproveImage"  class="image-popup" src="@(Url.Action("GetClientBankApproveImage") + "/" + Model.BankInfo.Id)" style="max-height: 200px; max-width: 100%"/>
                                  </a>
                                        </div>
                                    <button type="button" id="btnRemoveApproveImage" class="btn btn-danger btn-sm"> حذف عکس بارگذاری شده</button>
                                }
                                else
                                {
                                    <label> هنوز هیچ تصویری بارگذاری نشده است</label>
                                }
                            </div>
                            <div class="col-md-7">
                                <label> بارگذاری تصویر جدید</label>
                                <hr />
                                <div id="ImageTemplate" class="form-group">
                                    <div class="col-md-3">
                                        <div data-name="image-container" style="position: relative; min-width: 150px; max-width: 100%; min-height: 200px; max-height: 200px;">
                                            <input id="imageSelect" type="file" name="file" accept="image/x-png,image/gif,image/jpeg" style="display: none" />
                                            <img id="preview-image" style="position: absolute; right: 0; top: 0; min-width: 150px; max-height: 100%; min-height: 200px; max-width: 150px; border: 2px solid #999;" />
                                            <img id="loading-image" src="/Assets/images/preloader.gif" style="display: none; margin: 0; position: absolute; top: 50%; left: 50%; opacity: 0.7" />
                                        </div>
                                    </div>
                                    <div class="col-md-3" data-name="image-controls">
                                        <button type="button" class="btn btn-default btn-block text-primary" id="select-image-btn">انتخاب تصویر</button>
                                        <button type="button" class="btn btn-default btn-block text-danger" id="remove-image-btn" disabled="disabled">حذف</button>
                                        <button type="button" class="btn btn-default btn-block text-success" id="upload-image-btn" disabled="disabled">بارگذاری</button>
                                    </div>
                                    <div class="col-md-6 mt-md" id="image-details">
                                        <div><span>عرض: <span id="image-width"></span></span></div>
                                        <div><span>ارتفاع: <span id="image-height"></span></span></div>
                                        <div><span>سایز فایل: <span id="image-size"></span></span></div>
                                        <div><span>وضعیت: <span id="image-status"></span></span></div>
                                    </div>
                                    @Html.HiddenFor(m => m.TemporaryImageId)
                                    @Html.ValidationMessageFor(m => m.TemporaryImageId)

                                </div>

                            </div>

                        </div>

                        <div class="panel-footer">
                            @Html.HiddenFor(m => m.BankInfo.AccountApproveImageId)
                            <input id="BankInfo_Id" name="BankInfo.Id" type="hidden" value="@Model.ClientId" />
                            <button class="btn btn-primary" id="saveBankInfo" type="submit"><i class="fa fa-save"></i> ذخیره اطلاعات</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div id="popup-background" class="popup-background" style="display: none;">
    <div class="popup-content">
        <div id="popup-title"></div>
        <img id="popup-image" class="popup-image">
    </div>
</div>
<!-- end: page -->

@section StyleSheet
{

    <link href="~/Scripts/lightBox/dist/css/lightbox.min.css" rel="stylesheet" />
    

}

@section Scripts
{

    <script>

        let thumbnails = document.querySelectorAll(".image-popup");
        let popupBackground = document.querySelector("#popup-background");
        let popupTitle = document.querySelector("#popup-title");
        let popupImage = document.querySelector("#popup-image");
        for (let i = 0; i < thumbnails.length; i++) {
            thumbnails[i].addEventListener("click", function () {
                popupBackground.style.display = "block" //Display the popup;
                popupTitle.innerHTML = this.alt //Set the popup title text to the same as the thumbnails alt text;
                popupImage.src = this.src //Set the popup image src to the same as the thumbnail src;
            })
        }
        popupBackground.addEventListener("click", function () {
            popupBackground.style.display = "none";
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/lightBox/dist/js/lightbox.min.js"></script>
    <script type="text/javascript">

        var _gaq = _gaq || [];
        _gaq.push(['_setAccount', 'UA-36251023-1']);
        _gaq.push(['_setDomainName', 'jqueryscript.net']);
        _gaq.push(['_trackPageview']);

        (function () {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        })();

    </script>
    <script>

        $(document).ready(function() {
            //#region اطلاعات تماس

            @if (Model.Status != null)
            {
                switch (Model.Status.StatusType)
                {
                    case ModelEnums.StatusTypeE.Success:
                        @Html.Raw("ShowNotifyStatus('اطلاعات با موفقیت ذخیره شد', 'success','عملیات موفق','fa fa-check');");
                        break;
                    case ModelEnums.StatusTypeE.Error:
                        @Html.Raw("ShowNotifyStatus('ذخیره اطلاعات با خطا مواجه شده است!', 'error','عملیات ناموفق','fa fa-times');")
                        break;
                    case ModelEnums.StatusTypeE.ValidationError:
                        @Html.Raw("ShowNotifyStatus('اطلاعات وارد شده در فرم اشتباه است!', 'error','عملیات ناموفق','fa fa-times');")
                        break;
                    default:
                        break;
                }
            }
            // وقتی فرم نمایش داده شد اولین ورودی را انتخاب کنید
            $('div#page form').eq(0).find('.form-control:visible').eq(0).focus();
            $('div#page form').eq(0).find('.form-control:visible').eq(0).select();




            var hiddenApproveImageId = $('#BankInfo.AccountApproveImageId');
            var imgApproveImage = $('#imgApproveImage');
            var btnRemoveApproveImage = $('#btnRemoveApproveImage');

            btnRemoveApproveImage.click(function() {
                if (confirm("آیا از حذف عکس مطمئن هستید؟ توجه داشته باشید که برای حذف باید گزینه ذخیره اطلاعات را بزنید")) {
                    hiddenApproveImageId.val(0);
                    imgApproveImage.prop('src', '');
                    $(this).hide();
                }
            });

            var previewImage = $('#preview-image');
            var loadingImage = $('#loading-image');

            var btnSelectImage = $('#select-image-btn');
            var btnRemoveImage = $('#remove-image-btn');
            var btnUploadImage = $('#upload-image-btn');

            var inputImageSelect = $('#imageSelect');

            var imageTempIdHidden = $('#TemporaryImageId');

            var spanImageSize = $('#image-size');
            var spanImageStatus = $('#image-status');
            var spanImageWidth = $('#image-width');
            var spanImageHeight = $('#image-height');

            //When click on image show file input dialog
            previewImage.click(function (event) {
                //if image is disabled ---> we are uploading an image to server! so don't show select file dialog
                if (!$(this).prop('disabled'))
                    inputImageSelect.click();
            });

            //image select btn click event
            btnSelectImage.click(function (event) {
                inputImageSelect.click();

            });

            btnRemoveImage.click(
                function (event) {
                    //clear displayed image
                    previewImage.attr('src', '');

                    //clear ImageUniqueId
                    imageTempIdHidden.val('');


                    //disable upload btn
                    btnUploadImage.prop('disabled', true);

                    //disable remove btn
                    $(this).prop('disabled', true);

                    //clear detail data
                    spanImageSize.html('');
                    spanImageWidth.html('');
                    spanImageHeight.html('');
                    spanImageStatus.html('');


                });

            btnUploadImage.click(
                function (event) {

                    $(this).prop('disabled', true);

                    //disable remove and upload btn
                    btnRemoveImage.prop('disabled', true);
                    btnSelectImage.prop('disabled', true);

                    //set preview image opacity to 30%
                    previewImage.css('opacity', 0.3).prop('disabled', true);

                    //show loading image
                    loadingImage.show();


                    var clientId = @Model.Client.Id;
                    var fieldId = $(this).parent().parent().parent('div#ImageTemplate').attr('data-field-id');


                    var file = $(inputImageSelect)[0].files[0];

                    var formData = new FormData();
                    formData.append('image', file);
                    formData.append('clientId', clientId);
                    formData.append('fieldId', 0);

                    var currentBtn = this;
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UploadClientDocumentImage", "Client")',
                        processData: false,
                        contentType: false,
                        data: formData,
                        success: function (data, textStatus, jqXhr) {
                            var res = data.split('#');
                            if (res[0] === "Created") {
                                var tempImageId = res[1];
                                // در صورتی که کاربر تصویر تازه ای  را بارگذاری کرده بود
                                // در قسمت کد یکتای تصویر در انتها کلمه جدید با یک هشتگ اضافه میشود
                                // با این کار کنترل این که تصویر جدید است یا همان تصویر قدیمی می باشد آسان می باشد
                                imageTempIdHidden.val(tempImageId);

                                //set status of successful upload to server
                                spanImageStatus.removeClass().html('عکس به صورت موقت در سرور ذخیره شد. برای ثبت دائمی می بایست گزینه تایید اطلاعات زده شود')
                                    .addClass('text-success');

                            } else if (res[0] === "Error") {
                                spanImageStatus.removeClass().html(res[1]).addClass('text-danger');

                            }
                        },
                        error: function (err) {
                            // enable upload btn
                            $(currentBtn).prop('disabled', false);
                            //enable remove and select image btn
                            $(currentBtn).siblings('button').prop('disabled', false);
                            //set error message in image status
                            spanImageStatus.removeClass().html('در ارسال اطلاعات خطایی رخ داده است' + err).addClass('text-danger');
                        },
                        complete: function () {
                            //set preview image opacity to 100%
                            previewImage.css('opacity', 1).prop('disabled', false);

                            //hide loading image
                            loadingImage.hide();

                        }
                    });
                });


            //when select a new image display it
            // input file change event
            inputImageSelect.change(function (event) {

                if (this.files && this.files[0]) {

                    var fileSize = this.files[0].size;

                    //set file size in detail
                    spanImageSize.html(Math.round(fileSize / 1024 / 1024 * 100) / 100 + ' مگابایت');

                    btnRemoveImage.prop('disabled', false);

                    //enable upload btn
                    btnUploadImage.prop('disabled', false);

                    //check image file size (max is 1 MB)
                    if (fileSize > 1150000) {

                        //$('#imgStatus').html('حجم فایل انتخاب شده زیاد تر از محدوده می باشد!');


                        //Disabled upload button if file size is bigger than max
                        btnUploadImage.prop('disabled', true);

                        //set image status
                        spanImageStatus.html('حجم فایل انتخاب شده بیشتر از حد مجاز می باشد').removeClass().addClass('text-danger');
                    } else {
                        //set image status
                        spanImageStatus.html('سایز عکس مورد تایید می باشد، دکمه بارگذاری را جهت ارسال به سرور کلیک کنید.').removeClass().addClass('text-primary');
                    }

                    var currentInputFile = $(this);

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        //set image to display it
                        previewImage.attr('src', e.target.result);

                        var image = new Image();

                        //Set the Base64 string return from FileReader as source.
                        image.src = e.target.result;

                        image.onload = function () {
                            var height = this.height;
                            var width = this.width;

                            //set image width in detail panel
                            spanImageWidth.html(width + ' پیکسل');
                            //set image height in detail panel
                            spanImageHeight.html(height + ' پیکسل');
                        };

                    }

                    reader.readAsDataURL(this.files[0]);
                }
            });

            // وقتی که کاربر دکمه اینتر رو میزنه نباید صفحه ذخیره بشه
            // برای زیبا تر شدن کار با وب سایت کلید اینتر عمل تب را انجام می دهد
            $('div#page form .form-control').keydown(function (event) { //event==Keyevent
                if (event.which == 13) {
                    var inputs = $(this).closest('form').find(':visible.form-control');

                    if (inputs.index(this) == (inputs.length - 1))
                        $('div#page form button').eq(0).focus();
                    else
                        inputs.eq(inputs.index(this) + 1).focus();
                    event.preventDefault(); //Disable standard Enterkey action
                }
            });

        });
    </script>


}
