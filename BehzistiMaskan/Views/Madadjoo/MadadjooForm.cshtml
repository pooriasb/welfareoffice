@model BehzistiMaskan.ViewModels.MadadjooRegisterViewModel
@{

    var isEditMode = Model.ClientWaitingApplicant.Id != 0;
    ViewBag.Title = isEditMode ? "ویرایش اطلاعات مددجو" : "تکمیل مشخصات مددجو";
    Layout = "~/Views/Shared/_LayoutSimpleWithHeaderBehzisti.cshtml";
    if (Model.ClientWaitingApplicant.Latitude == 0.0d)
    {
        Model.ClientWaitingApplicant.Latitude = 29.61342;
    }
    if (Model.ClientWaitingApplicant.Longitude == 0.0d)
    {
        Model.ClientWaitingApplicant.Longitude = 52.50611;
    }
}


<div class="inner-wrapper">
    <section role="main" class="container">
        <div class="row">
            <div class="col-md-12">
                <section class="panel panel-featured panel-featured-primary">
                    <header class="panel-heading">
                        <h2 class="m-xs">@ViewBag.Title @(isEditMode ? "با کد ملی " + Model.ClientWaitingApplicant.NationalCode : "")</h2>
                    </header>
                    @using (Html.BeginForm("Save", "Madadjoo", FormMethod.Post, new { @class = "form", @id = "frmRegisterClientWaintingList" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="panel-body">
                            @if (!isEditMode)
                            {
                                <div class="well well-lg text-lg text-justify">
                                    شما با کد ملی <strong class="lead text-primary" style="letter-spacing: 3px;"> @Model.ClientWaitingApplicant.NationalCode </strong> وارد سامانه شده اید. <br />
                                    در صورتیکه این کد ملی متعلق به شما نیست گزینه <a class="btn btn-default text-danger" href="@Url.Action("Index")">این کد ملی من نیست</a> را انتخاب نمایید.
                                </div>
                            }

                            <div class="alert alert-info">
                                مددجوی محترم!
                                <br>
                                لطفا در وارد کردن اطلاعات زیر دقت کنید، در صورتی که در حال حاضر پاسخ پرسش ها را نمی دانید می توانید با مددکار خود مشورت کنید و یا اینکه بعدا این قسمت را تکمیل نمایید.
                            </div>

                            @if (isEditMode)
                            {
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="panel panel-featured panel-featured-primary">
                                            <div class="panel-heading p-sm text-primary">تاریخچه تقاضا</div>
                                            <div class="panel-body">
                                                <table class="table table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <td>#</td>
                                                            <td>تاریخ</td>
                                                            <td>توضیحات</td>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var log in Model.ClientWaitingApplicantLogs)
                                                        {
                                                            <tr>
                                                                <td>@log.Id</td>
                                                                <td>@log.CreatedAt</td>
                                                                <td>@log.Description</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <h4 class="text-primary">نوع تقاضا</h4>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="panel-group">
                                        <div class="panel panel-featured panel-featured-primary">
                                            <div class="panel-heading p-sm text-primary">متقاضی کمک به تعمیر مسکن فعلی و یا دریافت کمک هزینه ساخت یا خرید مسکن</div>
                                            <div class="panel-body">
                                                <div class="form-group">
                                                    @foreach (var request in Model.RequestTypes)
                                                    {
                                                        if (!request.IsExemption)
                                                        {
                                                            <div class="radio">
                                                                <label>@Html.RadioButtonFor(m => m.RequestTypeBuildingId, value: request.Id) @request.PersianTitle</label>
                                                            </div>
                                                        }
                                                    }
                                                    @Html.ValidationMessageFor(m => m.RequestTypeBuildingId)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="panel panel-featured panel-featured-primary">
                                            <div class="panel-heading p-sm text-primary">متقاضی دریافت معافیت انشعابات</div>
                                            <div class="panel-body">

                                                <div class="form-group">
                                                    <label>@Html.CheckBoxFor(m => m.IsRequestWaterExemption) متقاضی معافیت انشعاب آب</label>
                                                </div>
                                                <div class="form-group">
                                                    <label>@Html.CheckBoxFor(m => m.IsRequestElectricalExemption) متقاضی معافیت انشعاب برق</label>
                                                </div>
                                                <div class="form-group">
                                                    <label>@Html.CheckBoxFor(m => m.IsRequestGasExemption) متقاضی معافیت انشعاب گاز</label>
                                                </div>
                                                <div class="form-group">
                                                    <label>@Html.CheckBoxFor(m => m.IsRequestProductionLicenseExemption) متقاضی معافیت عوارض صدور پروانه ساخت</label>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                </div>

                            </div>

                            <div class="alert alert-warning">
                                در صورت عدم رعایت صداقت در ورود اطلاعات و اثبات اینکه شما دارای مسکن هستید ممکن است از کلیه خدمات سازمان بهزیستی محروم شوید. بنابراین لطفا اطلاعات را به صورت صحیح و واقعی وارد کنید.
                            </div>

                            <div class="row mb-md">
                                <div class="col-md-12">

                                </div>
                            </div>
                            <h4 class="text-primary">اطلاعات فردی</h4>
                            <hr />
                            <div class="row mb-md">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.Name, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.Name, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Name)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.Family, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.Family, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Family)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.FatherName, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.FatherName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.FatherName)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.MotherName, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.MotherName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.MotherName)
                                    </div>
                                </div>

                            </div>

                            <div class="row mb-md">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.BirthCertificateNo, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.BirthCertificateNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.BirthCertificateNo)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.BirthCertificateMosalsal, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.BirthCertificateMosalsal, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.BirthCertificateMosalsal)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.BirthCertificateDescription, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.BirthCertificateDescription, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.BirthCertificateDescription)
                                    </div>
                                </div>

                            </div>

                            <div class="row mb-md">

                                <div class="col-md-3">



                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.Birthdate, new { @class = "control-label " })
                                       <br/> <div class="input-group">
                                            <div class="input-group-addon" data-mddatetimepicker="true" data-targetselector="#ClientWaitingApplicant_Birthdate" data-enabletimepicker="false" data-englishnumber="true" data-placement="[bottom]">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </div>
                                            @Html.TextBoxFor(c => c.ClientWaitingApplicant.Birthdate, "{0:yyyy/M/d}",
                                                new Dictionary<string, Object>
                                                {
                                                    {"class", "form-control text-dir-ltr"},
                                                    {"data-mddatetimepicker", "true"},
                                                    {"data-targetselector", "#ClientWaitingApplicant_Birthdate"},
                                                    {"data-trigger", "focus"},
                                                    {"data-enabletimepicker", "false"},
                                                    {"data-englishnumber", "true"},
                                                })
                                        </div>
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Birthdate)

                                    </div>









                                    @*<div class="form-group">
                                            @Html.LabelFor(c => c.ClientWaitingApplicant.Birthdate, new { @class = "control-label col-md-4" })
                                                <div class="input-group">
                                                    <div class="input-group-addon" data-mddatetimepicker="true" data-targetselector="#ClientWaitingApplicant_Birthdate" data-enabletimepicker="false" data-englishnumber="true" data-placement="right">
                                                        <span class="glyphicon glyphicon-calendar"></span>
                                                    </div>
                                                    @Html.TextBoxFor(c => c.ClientWaitingApplicant.Birthdate, "{0:yyyy/M/d}",
                                                        new Dictionary<string, Object>
                                                        {
                                                            {"class", "form-control text-dir-ltr"},
                                                            {"data-mddatetimepicker", "true"},
                                                            {"data-targetselector", "#ClientWaitingApplicant_Birthdate"},
                                                            {"data-trigger", "focus"},
                                                            {"data-enabletimepicker", "false"},
                                                            {"data-englishnumber", "true"},
                                                        })
                                                </div>
                                                @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Birthdate)

                                        </div>*@

                                    @*<div class="form-group">
                                            @Html.LabelFor(c => c.ClientWaitingApplicant.Birthdate, new { @class = "control-label" })
                                            <div class="input-group">
                                                <div class="input-group-addon" data-mddatetimepicker="true" data-targetselector="#Client_Person_Birthdate" data-enabletimepicker="false" data-englishnumber="true" data-placement="right">
                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                </div>
                                                @Html.TextBoxFor(c => c.ClientWaitingApplicant.Birthdate, "{0:yyyy/M/d}",
                                                new Dictionary<string, Object>
                                                {
                                                    {"class", "form-control text-dir-ltr"},
                                                    {"data-mddatetimepicker", "true"},
                                                    {"data-targetselector", "#Client_Person_Birthdate"},
                                                    {"data-trigger", "focus"},
                                                    {"data-enabletimepicker", "false"},
                                                    {"data-englishnumber", "true"},
                                                })
                                            </div>
                                            @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Birthdate)
                                        </div>*@



                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.GenderTypeId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.ClientWaitingApplicant.GenderTypeId, new SelectList(Model.GenderTypes, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.GenderTypeId)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.MarriageTypeId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.ClientWaitingApplicant.MarriageTypeId, new SelectList(Model.MarriageTypes, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.MarriageTypeId)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.NumberOfChildren, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.NumberOfChildren, new { @class = "form-control text-left" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.NumberOfChildren)

                                    </div>
                                </div>

                            </div>

                            <div class="row">

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ProvinceOfBirthId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.ProvinceOfBirthId, new SelectList(Model.AllProvinces, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ProvinceOfBirthId)
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.CountyOfBirthId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.CountyOfBirthId, new SelectList(Model.CountyOfBirthList, "Id", "Name", Model.ClientWaitingApplicant.CityOfBirth?.District.CountyId), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.CountyOfBirthId)
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.DistrictOfBirthId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.DistrictOfBirthId, new SelectList(Model.DistrictOfBirthList, "Id", "Name", Model.ClientWaitingApplicant.CityOfBirth?.DistrictId), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.DistrictOfBirthId)
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.CityOfBirthId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.ClientWaitingApplicant.CityOfBirthId, new SelectList(Model.CityOfBirthList, "Id", "Name", Model.ClientWaitingApplicant.CityOfBirthId), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.CityOfBirthId)
                                    </div>
                                </div>


                            </div>
                            <h4 class="mt-xl text-primary">مشخصات پرونده بهزیستی</h4>
                            <hr />

                            <div class="row mb-sm">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.CountyOfBehzistiDocumentId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.CountyOfBehzistiDocumentId, new SelectList(Model.CountyOfBirthList, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.CountyOfBehzistiDocumentId)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.DistrictOfBehzistiDocumentId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.DistrictOfBehzistiDocumentId, new SelectList(Model.DistrictOfBehzistiDocumentList, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.DistrictOfBehzistiDocumentId)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.CityId, new { @class = "" })
                                        @Html.DropDownListFor(c => c.ClientWaitingApplicant.CityId, new SelectList(Model.CityOfBehzistiDocumentList, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.CityId)
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-sm">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.ClientTypeId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.ClientWaitingApplicant.ClientTypeId, new SelectList(Model.ClientTypes, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.ClientTypeId)

                                        <br />

                                        @Html.TextBoxFor(x => x.ClientWaitingApplicant.ClientTypeDescription,
                                         new Dictionary<string, object>()
                                         {
                                             {"class" , "form-control hidden"},
                                             {"placeholder" , "لطفا توضیحات خود را وارد کنید"},
                                             {"data-val" , "true"},
                                             {"data-val-required" , "لطفا توضیحات خود را وارد کنید"},

                                         })

                                    </div>
                                </div>
                                <div class="col-md-3 mt-lg">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(c => c.ClientWaitingApplicant.IsDisabled) آیا دارای معلولیت می باشید؟
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.NumberOfDisabledInFamily, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.NumberOfDisabledInFamily, new { @class = "form-control text-dir-ltr" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.NumberOfDisabledInFamily)
                                    </div>
                                </div>
                                <div class="col-md-3 mt-lg">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(c => c.ClientWaitingApplicant.IsHouseHold) آیا سرپرست خانوار می باشد؟
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <h4 class="mt-xl text-primary">مشخصات تماس</h4>
                            <hr />

                            <div class="row mb-sm">

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.Mobile, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.Mobile, new { @class = "form-control text-dir-ltr" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Mobile)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.EmergencyTel, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.EmergencyTel, new { @class = "form-control text-dir-ltr" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.EmergencyTel)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.HomeTel, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.HomeTel, new { @class = "form-control text-dir-ltr" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.HomeTel)
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.WorkTel, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.WorkTel, new { @class = "form-control text-dir-ltr" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.WorkTel)
                                    </div>
                                </div>

                            </div>

                            <div class="row mb-xlg">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.WorkAddress, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.WorkAddress, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.WorkAddress)
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    @Html.LabelFor(m => m.ClientWaitingApplicant.CurrentHouseTypeId, new { @class = "control-label text-primary text-lg", @style = "float:right !important; line-height: 2;" })
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(c => c.ClientWaitingApplicant.CurrentHouseTypeId, new SelectList(Model.CurrentHouseTypes, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.CurrentHouseTypeId)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="divPleaseSelectState" class="alert alert-default">
                                        لطفا یکی از گزینه های وضعیت سکونت را انتخاب کنید
                                    </div>
                                    <div class="row" id="divEjare">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ClientWaitingApplicant.DepositAmount, new { @class = "control-label" })
                                                @Html.TextBoxFor(m => m.ClientWaitingApplicant.DepositAmount, new { @class = "form-control text-dir-ltr" })
                                                @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.DepositAmount)
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ClientWaitingApplicant.MonthlyRentalRate, new { @class = "control-label" })
                                                @Html.TextBoxFor(m => m.ClientWaitingApplicant.MonthlyRentalRate, new { @class = "form-control text-dir-ltr" })
                                                @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.MonthlyRentalRate)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="divBastegan">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ClientWaitingApplicant.RelativeFamilyNameWhoClientLiveInHerHouse, new { @class = "control-label" })
                                                @Html.TextBoxFor(c => c.ClientWaitingApplicant.RelativeFamilyNameWhoClientLiveInHerHouse, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.RelativeFamilyNameWhoClientLiveInHerHouse)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="divKhayer">

                                    </div>
                                    <div class="row" id="divSayer">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ClientWaitingApplicant.OtherDescription, new { @class = "control-label" })
                                                @Html.TextBoxFor(c => c.ClientWaitingApplicant.OtherDescription, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.OtherDescription)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <h4 class="mt-md text-primary">آدرس مسکن فعلی</h4>
                            <hr />
                            <div class="row mb-md">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.HouseCountyId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.HouseCountyId, new SelectList(Model.AllCounties, "Id", "Name"), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.HouseCountyId)
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.HouseDistrictId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.HouseDistrictId, new SelectList(new List<SelectListItem>(), "", ""), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.HouseDistrictId)
                                    </div>
                                </div>


                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.HouseCityId, new { @class = "control-label" })
                                        @Html.DropDownListFor(c => c.ClientWaitingApplicant.HouseCityId, new SelectList(new List<SelectListItem>(), "", ""), "انتخاب کنید", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.HouseCityId)
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-md">
                                <div class="col-md-9">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.Address, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.Address, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.Address)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(c => c.ClientWaitingApplicant.PostalCode, new { @class = "control-label" })
                                        @Html.TextBoxFor(c => c.ClientWaitingApplicant.PostalCode, new { @class = "form-control text-dir-ltr" })
                                        @Html.ValidationMessageFor(c => c.ClientWaitingApplicant.PostalCode)
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-md">
                                <div class="col-md-3">
                                    <div class="form-group mb-sm">
                                        @Html.LabelFor(m => m.ClientWaitingApplicant.Latitude)
                                        @Html.TextBoxFor(m => m.ClientWaitingApplicant.Latitude, new { @class = "form-control  text-dir-ltr" })
                                        @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.Latitude)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ClientWaitingApplicant.Longitude)
                                        @Html.TextBoxFor(m => m.ClientWaitingApplicant.Longitude, new { @class = "form-control  text-dir-ltr" })
                                        @Html.ValidationMessageFor(m => m.ClientWaitingApplicant.Longitude)
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <label class="control-label">انتخاب از روی نقشه</label>
                                    <div id="locationPicker" style="width: auto; height: 300px;"></div>
                                </div>
                            </div>
                        </div>
                        <div class="panel-footer">
                            @Html.HiddenFor(m => m.ClientWaitingApplicant.Id)
                            @Html.HiddenFor(m => m.ClientWaitingApplicant.NationalCode)
                            <button id="btnSave" type="submit" class="btn btn-primary">ذخیره اطلاعات @(isEditMode ? "" : "و دریافت کد رهگیری")</button>
                        </div>
                    }
                </section>
            </div>
        </div>
    </section>

</div>



@section Stylesheets
{
    <link href="~/Assets/vendor/MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePicker.css" rel="stylesheet" />
    <link href="~/Assets/vendor/leaflet/leaflet.css" rel="stylesheet" />
}

@section Scripts
{

    <script src="~/Assets/vendor/MdBootstrapPersianDateTimePicker/jquery.Bootstrap-PersianDateTimePicker.js"></script>
    <script src="~/Assets/vendor/MdBootstrapPersianDateTimePicker/jalaali.js"></script>
    <script src="~/Assets/vendor/leaflet/leaflet.js"></script>
    <script src="~/Assets/javascripts/OSMLocationPicker.js"></script>

    <script>

        $(document).ready(function() {


            // کد مربوط به توضیحات نوع مددجو
            $("#ClientWaitingApplicant_ClientTypeId").change(function() {
             let id =   $(this).val();
             if (id == 8) {
                 $("#ClientWaitingApplicant_ClientTypeDescription").attr('data-val', 'true');
                 $("#ClientWaitingApplicant_ClientTypeDescription").removeClass('hidden');
             } else {
                 $("#ClientWaitingApplicant_ClientTypeDescription").addClass('hidden');
                $("#ClientWaitingApplicant_ClientTypeDescription").attr('data-val', 'false');
             }
            });


            // کد مربوط به شهرستان و بخش و شهر
            // پرونده بهزیستی


            //کد های جاوااسکریپت مربوط به بخش اطلاعات اولیه
            //این کد ها مربوط به انتخاب مکان جغرافیایی محل تولد
            // و شهری است که مددجو در آن پرونده بهزیستی دارد
            var countyDropDown = $('#CountyOfBehzistiDocumentId');
            var districtDropDown = $('#DistrictOfBehzistiDocumentId');
            var cityDropDown = $('#ClientWaitingApplicant_CityId');


            // CountyId Select Index Change
            countyDropDown.change(function() {
                var countyId = countyDropDown.val();
                if (countyId) {
                    $.getJSON("/api/counties/" + countyId + "/districts",
                        function(districts) {
                            districtDropDown.children('option').remove();

                            $.each(districts,
                                function(i, district) {
                                    districtDropDown.append(new Option(district.name, district.id));
                                });
                            districtDropDown.trigger('change');
                        });
                } else {
                    //districtDropDown.children('option:not(:first)').remove();
                    districtDropDown.children('option').remove();
                    districtDropDown.append('<option value="">انتخاب کنید</option>');
                    districtDropDown.trigger('change');
                }
            });

            // DistrictId Select Index Change
            districtDropDown.change(function() {
                var districtId = districtDropDown.val();
                if (districtId) {
                    $.getJSON("/api/districts/" + districtId + "/cities",
                        function(cities) {
                            cityDropDown.children('option').remove();

                            $.each(cities,
                                function(key, city) {
                                    cityDropDown.append(new Option(city.name, city.id));
                                });
                            cityDropDown.change();
                        });
                } else {
                    cityDropDown.children('option').remove();
                    cityDropDown.append('<option value="">انتخاب کنید</option>');
                    cityDropDown.change();
                }
            });


            // -------------------------------------------------------------------
            // کد های مربوط به استان و شهرستان و بخش محل تولد
            // -------------------------------------------------------------------

            var provinceOfBirthDropDown = $('#ProvinceOfBirthId');
            var countyOfBirthDropDown = $('#CountyOfBirthId');
            var districtOfBirthDropDown = $('#DistrictOfBirthId');
            var cityOfBirthDropDown = $('#ClientWaitingApplicant_CityOfBirthId');

            provinceOfBirthDropDown.change(function() {
                var provinceId = provinceOfBirthDropDown.val();
                if (provinceId) {
                    countyOfBirthDropDown.children('option').remove();

                    $.getJSON("/api/provinces/" + provinceId + "/counties",
                        function(counties) {
                            $.each(counties,
                                function(key, county) {
                                    countyOfBirthDropDown.append(new Option(county.name, county.id));
                                });
                            countyOfBirthDropDown.trigger('change');
                        });
                } else {
                    countyOfBirthDropDown.children('option').remove();
                    countyOfBirthDropDown.append('<option value="">انتخاب کنید</option>');
                    countyOfBirthDropDown.trigger('change');
                }
            });

            countyOfBirthDropDown.change(function() {
                var countyId = countyOfBirthDropDown.val();
                if (countyId) {
                    districtOfBirthDropDown.children('option').remove();

                    $.getJSON("/api/counties/" + countyId + "/districts",
                        function(districts) {
                            $.each(districts,
                                function(key, district) {
                                    districtOfBirthDropDown.append(new Option(district.name, district.id));
                                });
                            districtOfBirthDropDown.change();
                        });
                } else {
                    districtOfBirthDropDown.children('option').remove();
                    districtOfBirthDropDown.append('<option value="">انتخاب کنید</option>');
                    districtOfBirthDropDown.change();
                }
            });

            districtOfBirthDropDown.change(function() {
                var districtId = districtOfBirthDropDown.val();
                if (districtId) {
                    cityOfBirthDropDown.children('option').remove();

                    $.getJSON("/api/districts/" + districtId + "/cities",
                        function(cities) {
                            $.each(cities,
                                function(key, city) {
                                    cityOfBirthDropDown.append(new Option(city.name, city.id));
                                });
                            cityOfBirthDropDown.change();
                        });
                } else {
                    cityOfBirthDropDown.children('option').remove();
                    cityOfBirthDropDown.append('<option value="">انتخاب کنید</option>');
                    cityOfBirthDropDown.change();
                }
            });


            // بهتر کردن عملکرد تقویم که هنگام فوکس شدن روی تاریخ تولد باز می شود
            // باید وقتی که از روی تاریخ تولد رفتیم تقویم مخفی شود
            var personBirthdateInput = $('#ClientWaitingApplicant_Birthdate');

            //personBirthdateInput.focusout(function() {
            //    personBirthdateInput.MdPersianDateTimePicker('hide');
            //});


            // -------------------------------------------------------------------
            // کد مربوط به وضعیت مسکن فعلی
            // -------------------------------------------------------------------


            var currentHouseDropDown = $('#ClientWaitingApplicant_CurrentHouseTypeId');
            var divSelectStatus = $('#divPleaseSelectState');
            var divEjare = $('#divEjare');
            var divBastegan = $('#divBastegan');
            var divKhayer = $('#divKhayer');
            var divSayer = $('#divSayer');

            function hideAllCurrentHouseDiv() {
                divEjare.hide();
                divBastegan.hide();
                divKhayer.hide();
                divSayer.hide();
                divSelectStatus.hide();
            }

            currentHouseDropDown.change(function() {
                var selectedState = currentHouseDropDown.val();
                if (selectedState) {
                    switch (selectedState) {
                    case '1': //اجاره ای
                        hideAllCurrentHouseDiv();
                        divEjare.show();
                        break;
                    case '2': //بستگان
                        hideAllCurrentHouseDiv();
                        divBastegan.show();
                        break;
                    case '3': //خیرین
                        hideAllCurrentHouseDiv();
                        divKhayer.show();
                        break;
                    case '4': //سایر
                        hideAllCurrentHouseDiv();
                        divSayer.show();
                    default:
                    }
                } else {
                    hideAllCurrentHouseDiv();
                    divSelectStatus.show();
                }
            });

            hideAllCurrentHouseDiv();

            var countyCurrentHouseDropDown = $('#HouseCountyId');
            var districtCurrentHouseDropDown = $('#HouseDistrictId');
            var cityCurrentHouseDropDown = $('#ClientWaitingApplicant_HouseCityId');

            // CountyId Select Index Change
            countyCurrentHouseDropDown.change(function() {
                var countyId = countyCurrentHouseDropDown.val();
                if (countyId) {
                    $.getJSON("/api/counties/" + countyId + "/districts",
                        function(districts) {
                            districtCurrentHouseDropDown.children('option').remove();

                            $.each(districts,
                                function(i, district) {
                                    districtCurrentHouseDropDown.append(new Option(district.name, district.id));
                                });
                            districtCurrentHouseDropDown.trigger('change');
                        });
                } else {
                    //districtCurrentHouseDropDown.children('option:not(:first)').remove();
                    districtCurrentHouseDropDown.children('option').remove();
                    districtCurrentHouseDropDown.append('<option value="">انتخاب کنید</option>');
                    districtCurrentHouseDropDown.trigger('change');
                }
            });

            // DistrictId Select Index Change
            districtCurrentHouseDropDown.change(function() {
                var districtId = districtCurrentHouseDropDown.val();
                if (districtId) {
                    $.getJSON("/api/districts/" + districtId + "/cities",
                        function(cities) {
                            cityCurrentHouseDropDown.children('option').remove();

                            $.each(cities,
                                function(key, city) {
                                    cityCurrentHouseDropDown.append(new Option(city.name, city.id));
                                });
                            cityCurrentHouseDropDown.change();
                        });
                } else {
                    cityCurrentHouseDropDown.children('option').remove();
                    cityCurrentHouseDropDown.append('<option value="">انتخاب کنید</option>');
                    cityCurrentHouseDropDown.change();
                }
            });


            countyCurrentHouseDropDown.change();


            // تنظیم اولیه مربوط به نقشه
            var latitude = @Model.ClientWaitingApplicant.Latitude;
            var longitude = @Model.ClientWaitingApplicant.Longitude;

            var radius = 30;
            var zoom = 16;
            var divName = 'locationPicker';


            OSMPICKER.initmappicker(divName,
                latitude,
                longitude,
                radius,
                zoom,
                {
                    addressId: "addressOSM",
                    latitudeId: "ClientWaitingApplicant_Latitude",
                    longitudeId: "ClientWaitingApplicant_Longitude"
                });

            // در صورتی که کاربر روی نقشه کلید کرد دکمه ثبت انتخاب شود
            $('#' + divName).focusin(function() {
                $('button[type="submit"]').focus();
            });
            //#endregion


        });

        $('#btnSave').click(function(e) {
            var selectedItem = $('input[type="radio"][name="RequestTypeBuildingId"]:checked').val();
            if (selectedItem == 0) {

                var out = $('input[type="checkbox"][name="IsRequestWaterExemption"]:checked').length +
                    $('input[type="checkbox"][name="IsRequestElectricalExemption"]:checked').length +
                    $('input[type="checkbox"][name="IsRequestGasExemption"]:checked').length +
                    $('input[type="checkbox"][name="IsRequestProductionLicenseExemption"]:checked').length;

                if (out == 0) {
                    alert('شما گزینه فقط متقاضی دریافت معافیت انشعابات هستم را انتخاب کرده اید اما هیچ کدام از موارد معافیت را انتخاب نکرده اید.')
                    e.preventDefault();
                    return false;
                }
            }
        });

        $('#frmRegisterClientWaintingList').on('submit',
            function(e) {
                var selectedItem = $('input[type="radio"][name="RequestTypeBuildingId"]:checked').val();
                if (selectedItem == 0) {

                    var out = $('input[type="checkbox"][name="IsRequestWaterExemption"]:checked').length +
                        $('input[type="checkbox"][name="IsRequestElectricalExemption"]:checked').length +
                        $('input[type="checkbox"][name="IsRequestGasExemption"]:checked').length +
                        $('input[type="checkbox"][name="IsRequestProductionLicenseExemption"]:checked').length;

                    if (out == 0) {
                        alert('شما گزینه فقط متقاضی دریافت معافیت انشعابات هستم را انتخاب کرده اید اما هیچ کدام از موارد معافیت را انتخاب نکرده اید.')
                        e.preventDefault();
                        return false;
                    }
                }
            });
    </script>
}
